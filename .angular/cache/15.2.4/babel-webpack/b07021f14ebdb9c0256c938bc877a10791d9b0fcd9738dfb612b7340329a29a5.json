{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CartComponent = class CartComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnChanges(changes) {\n    if (this.cartArray !== undefined) this.cartArray.clear();\n    this.cart123?.items.forEach(x => this.addFormItem(x));\n  }\n  ngOnInit() {\n    this.cartArray = this.fb.array([]);\n    this.form = this.createForm();\n    console.log(this.cart123.items.length);\n  }\n  createForm() {\n    const grp = this.fb.group({\n      name: this.fb.control(\"\", [Validators.required]),\n      address: this.fb.control(\"\", [Validators.required]),\n      delivery: this.fb.control(\"\", [Validators.required, Validators.pattern(\"^[P|A]M$\")]),\n      items: this.cartArray\n    });\n    return grp;\n  }\n  addFormItem(item) {\n    const grp = this.fb.group({\n      name: this.fb.control(item.name, [Validators.required]),\n      price: this.fb.control(item.price, [Validators.required]),\n      quantity: this.fb.control(item.quantity, [Validators.required]),\n      total: this.fb.control(item.quantity * item.price, [Validators.required])\n    });\n    this.cartArray.push(grp);\n  }\n  processForm() {\n    console.log(this.form.value);\n    this.form.reset();\n  }\n};\n__decorate([Input()], CartComponent.prototype, \"cart123\", void 0);\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAA6D,eAAe;AACrG,SAAiCC,UAAU,QAAmB,gBAAgB;AASvE,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EASxBC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;EAAgB;EAEtCC,WAAW,CAACC,OAAsB;IAEhC,IAAG,IAAI,CAACC,SAAS,KAAIC,SAAS,EAAE,IAAI,CAACD,SAAS,CAACE,KAAK,EAAE;IAEtD,IAAI,CAACC,OAAO,EAAEC,KAAK,CAACC,OAAO,CAACC,CAAC,IAAI,IAAI,CAACC,WAAW,CAACD,CAAC,CAAC,CAAC;EAEvD;EACAE,QAAQ;IACN,IAAI,CAACR,SAAS,GAAG,IAAI,CAACH,EAAE,CAACY,KAAK,CAAC,EAAE,CAAC;IAClC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,UAAU,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,OAAO,CAACC,KAAK,CAACU,MAAM,CAAC;EACxC;EAEQH,UAAU;IAChB,MAAMI,GAAG,GAAG,IAAI,CAAClB,EAAE,CAACmB,KAAK,CAAC;MACxBC,IAAI,EAAE,IAAI,CAACpB,EAAE,CAACqB,OAAO,CAAS,EAAE,EAAE,CAAExB,UAAU,CAACyB,QAAQ,CAAE,CAAC;MAC1DC,OAAO,EAAE,IAAI,CAACvB,EAAE,CAACqB,OAAO,CAAS,EAAE,EAAE,CAAExB,UAAU,CAACyB,QAAQ,CAAE,CAAC;MAC7DE,QAAQ,EAAE,IAAI,CAACxB,EAAE,CAACqB,OAAO,CAAS,EAAE,EAAE,CAAExB,UAAU,CAACyB,QAAQ,EAAEzB,UAAU,CAAC4B,OAAO,CAAC,UAAU,CAAC,CAAE,CAAC;MAC9FlB,KAAK,EAAE,IAAI,CAACJ;KACb,CAAC;IAEF,OAAOe,GAAG;EACZ;EAEAR,WAAW,CAACgB,IAAU;IAEpB,MAAMR,GAAG,GAAG,IAAI,CAAClB,EAAE,CAACmB,KAAK,CAAC;MACxBC,IAAI,EAAE,IAAI,CAACpB,EAAE,CAACqB,OAAO,CAASK,IAAI,CAACN,IAAI,EAAE,CAACvB,UAAU,CAACyB,QAAQ,CAAC,CAAC;MAC/DK,KAAK,EAAE,IAAI,CAAC3B,EAAE,CAACqB,OAAO,CAASK,IAAI,CAACC,KAAK,EAAE,CAAC9B,UAAU,CAACyB,QAAQ,CAAC,CAAC;MACjEM,QAAQ,EAAE,IAAI,CAAC5B,EAAE,CAACqB,OAAO,CAASK,IAAI,CAACE,QAAQ,EAAE,CAAC/B,UAAU,CAACyB,QAAQ,CAAC,CAAC;MACvEO,KAAK,EAAE,IAAI,CAAC7B,EAAE,CAACqB,OAAO,CAASK,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACC,KAAK,EAAG,CAAC9B,UAAU,CAACyB,QAAQ,CAAC;KAElF,CAAC;IACF,IAAI,CAACnB,SAAS,CAAC2B,IAAI,CAACZ,GAAG,CAAC;EAC1B;EAEAa,WAAW;IAEThB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAACmB,KAAK,CAAC;IAC5B,IAAI,CAACnB,IAAI,CAACoB,KAAK,EAAE;EACnB;CACD;AAjDCC,YADCtC,KAAK,EAAE,8CACM;AAHHE,aAAa,eALzBH,SAAS,CAAC;EACTwC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWvC,aAAa,CAoDzB;SApDYA,aAAa","names":["Component","Input","Validators","CartComponent","constructor","fb","ngOnChanges","changes","cartArray","undefined","clear","cart123","items","forEach","x","addFormItem","ngOnInit","array","form","createForm","console","log","length","grp","group","name","control","required","address","delivery","pattern","item","price","quantity","total","push","processForm","value","reset","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\theho\\src\\fruit_cart_v3\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["import { Component, Input, OnInit, Output, OnDestroy, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { Cart, Item } from '../models';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit, OnChanges {\n\n  @Input()\n  cart123!: Cart\n  \n  form!: FormGroup\n  cartArray!: FormArray\n  totalPrice!: number\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if(this.cartArray !==undefined) this.cartArray.clear();\n\n    this.cart123?.items.forEach(x => this.addFormItem(x))\n\n  } \n  ngOnInit(): void {\n    this.cartArray = this.fb.array([])\n    this.form = this.createForm()\n    console.log(this.cart123.items.length)\n  }\n\n  private createForm(): FormGroup {\n    const grp = this.fb.group({\n      name: this.fb.control<string>(\"\", [ Validators.required ]),\n      address: this.fb.control<string>(\"\", [ Validators.required ]),\n      delivery: this.fb.control<string>(\"\", [ Validators.required, Validators.pattern(\"^[P|A]M$\") ]),\n      items: this.cartArray\n    })\n\n    return grp;\n  }\n\n  addFormItem(item: Item) {\n\n    const grp = this.fb.group({\n      name: this.fb.control<string>(item.name, [Validators.required]),\n      price: this.fb.control<number>(item.price, [Validators.required]),\n      quantity: this.fb.control<number>(item.quantity, [Validators.required]),\n      total: this.fb.control<number>(item.quantity * item.price , [Validators.required])\n    \n    })\n    this.cartArray.push(grp)\n  }\n\n  processForm() {\n\n    console.log(this.form.value)\n    this.form.reset()\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}